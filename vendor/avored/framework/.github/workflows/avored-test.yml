name: "Run Tests"

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        # php: ['7.2', '7.3', '7.4']
        php: ['7.3']
        laravel: ['5.8.*', '6.*', '7.*', '8.*']
        include:
          - laravel: '5.8.*'
            testbench: '3.8.*'
          - laravel: '6.*'
            testbench: '4.*'
          - laravel: '7.*'
            testbench: '5.*'
          - laravel: '8.*'
            testbench: '6.*' 
       
    name: PHP ${{ matrix.php }} - Laravel ${{ matrix.laravel }}

    services:
      mysql:
          image: mysql:5.7
          env:
              MYSQL_ALLOW_EMPTY_PASSWORD: yes
              MYSQL_DATABASE: avored_ecommerce_test
          ports:
              - 3306
          options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache/files
          key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, mysql, mysqli, pdo_mysql, bcmath, soap, intl, gd, exif, iconv, imagick

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" "symfony/console:>=4.3.4" --no-interaction --no-update
          composer update --prefer-stable --prefer-dist --no-interaction --no-suggest
      - name: Execute tests
        run: vendor/bin/phpunit
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}


      - name: Send Slack notification
        uses: 8398a7/action-slack@v2
        if: failure()
        with:
            status: ${{ job.status }}
            author_name: ${{ github.actor }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
